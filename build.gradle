plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'site.tteolione'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

//ext {
//	set('springCloudVersion', "2023.0.3")
//}

dependencies {

	// Spring boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// h2
	runtimeOnly 'com.h2database:h2'

//	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// test
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// thymeleaf
	implementation 'org.thymeleaf:thymeleaf'

	// RestDocs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

}

ext { // 전역 변수
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'

	sources { // 특정 파일만 html로 만든다.
		include("**/index.adoc")
	}
	baseDirFollowsSourceFile() // 다른 adoc 파일을 include 할 때 경로를 baseDir로 맞춘다.
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	//https://jun-codinghistory.tistory.com/836
	copy {
		from("${asciidoctor.outputDir}")
		into 'src/main/resources/static/docs'
	}
//	from("${asciidoctor.outputDir}") {
//		into 'static/docs'
//	}
}

dependencyManagement {
//	imports {
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//	}
}

tasks.named('test') {
	useJUnitPlatform()
}

/**
 * QueryDSL
 */
def querydslDir = "src/main/generated"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
	file(querydslDir).deleteDir()
}